{"version":3,"sources":["logo.svg","index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","Game","state","history","Array","fill","stepNumber","xisNext","slice","length","calculrateWinner","xInNext","setState","concat","step","xIsNext","status","current","winner","moves","map","move","desc","jumpTo","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"wOAAe,I,YCuBf,SAASA,EAAOC,GACd,OACE,wBAAQC,UAAU,SAASC,QAASF,EAAME,QAA1C,SACMF,EAAMG,Q,IAKVC,E,kKACJ,SAAaC,GAAI,IAAD,OACd,OACE,cAACN,EAAD,CACEI,MAAOG,KAAKN,MAAMO,QAAQF,GAC1BH,QAAS,kBAAM,EAAKF,MAAME,QAAQG,Q,oBAKxC,WACE,OACE,gCACE,sBAAKJ,UAAU,YAAf,UACGK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAErB,sBAAKP,UAAU,YAAf,UACGK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAErB,sBAAKP,UAAU,YAAf,UACGK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,a,GA1BTC,IAAMC,WAkCpBC,E,kDACJ,WAAYX,GAAO,IAAD,8BAChB,cAAMA,IACDY,MAAM,CACTC,QAAS,CACP,CACAN,QAASO,MAAM,GAAGC,KAAK,QAGzBC,WAAY,EACZC,SAAQ,GATM,E,+CAalB,SAAYZ,GACV,IAAMQ,EAAUP,KAAKM,MAAMC,QAAQK,MAAM,EAAGZ,KAAKM,MAAMI,WAAa,GAE9DT,EADUM,EAAQA,EAAQM,OAAS,GACjBZ,QAAQW,QAC5BE,EAAiBb,IAAYA,EAAQF,KAGzCE,EAAQF,GAAKC,KAAKM,MAAMS,QAAU,IAAI,IACtCf,KAAKgB,SAAS,CACZT,QAASA,EAAQU,OAAO,CACtB,CACAhB,QAASA,KAGXS,WAAYH,EAAQM,OACpBE,SAAUf,KAAKM,MAAMS,a,oBAIzB,SAAOG,GACLlB,KAAKgB,SAAS,CACZN,WAAYQ,EACZC,QAAUD,EAAO,IAAO,M,oBAK5B,WAAU,IAgBJE,EAhBG,OACDb,EAAUP,KAAKM,MAAMC,QACrBc,EAAUd,EAAQP,KAAKM,MAAMI,YAC7BY,EAASR,EAAiBO,EAAQpB,SAElCsB,EAAQhB,EAAQiB,KAAI,SAACN,EAAMO,GAC/B,IAAMC,EAAOD,EACX,eAAiBA,EACjB,mBACF,OACE,6BACE,wBAAQ7B,QAAS,kBAAM,EAAK+B,OAAOF,IAAnC,SAA2CC,KADpCD,MAab,OALEL,EADEE,EACO,WAAaA,EAEb,iBAAmBtB,KAAKM,MAAMa,QAAU,IAAM,KAIvD,sBAAKxB,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAAC,EAAD,CACEM,QAASoB,EAAQpB,QACjBL,QAAS,SAACG,GAAD,OAAO,EAAK6B,YAAY7B,QAGrC,sBAAKJ,UAAU,YAAf,UACE,8BAAMyB,IACN,6BAAKG,c,GA1EIpB,IAAMC,WA0FzB,SAASU,EAAiBb,GAW1B,IAVE,IAAM4B,EAAQ,CACd,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEA9B,EAAI,EAAGA,EAAI8B,EAAMhB,OAAQd,IAAK,CAAC,IAAD,cACnB8B,EAAM9B,GADa,GAC9B+B,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAI/B,EAAQ6B,IAAM7B,EAAQ6B,KAAO7B,EAAQ8B,IAAM9B,EAAQ6B,KAAO7B,EAAQ+B,GACpE,OAAO/B,EAAQ6B,GAGnB,OAAO,KAtBPG,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.39a9ea59.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// class Square extends React.Component {\n//   render() {\n//     return (\n//       //타이핑 횟수 줄이고, this의 혼란을 피하기 위해 화살표 함수 사용\n//       //square를 클릭할 때 현재 state 표시해줌 : 버튼 클릭할때마다 다시 렌더링\n//        <button \n//         className=\"square\" \n//          onClick={() =>  this.props.onClick()}\n//          > \n//          {this.props.value}  \n//       </button>\n//       //부모 board 컴포넌트 -> 자식 square 컴포넌트로 value와 onClick 두개의 prop 전달함\n//     );\n//   }\n// }\n\n\nfunction Square(props){\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n         {props.value}  \n    </button>\n  );\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return (\n      <Square \n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  } //square에 value prop을 전달하기 위해 코드 수정\n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\n//square -> board -> game (최상위)\nclass Game extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={\n      history: [\n        {\n        squares: Array(9).fill(null),\n        }\n      ],\n      stepNumber: 0,\n      xisNext:true,\n    };\n  }\n\n  handleClick(i){\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (calculrateWinner(squares) || squares[i]){\n      return;\n    }\n    squares[i] = this.state.xInNext ? 'X':'O';\n    this.setState({\n      history: history.concat([\n        {\n        squares: squares,\n        }\n      ]),\n      stepNumber: history.length,\n      xInNext: !this.state.xInNext,\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n    });\n  }\n\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculrateWinner(current.squares);\n\n    const moves = history.map((step, move) => {\n      const desc = move ?\n        'Go to move #' + move :\n        'Go to game start';\n      return (\n        <li key={move}>\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\n        </li>\n      );\n    });\n\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n  \n}\n\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\nfunction calculrateWinner(squares){\n  const lines = [\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n  [0, 3, 6],\n  [1, 4, 7],\n  [2, 5, 8],\n  [0, 4, 8],\n  [2, 4, 6],\n];\nfor (let i = 0; i < lines.length; i++) {\n  const [a, b, c] = lines[i];\n  if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n    return squares[a];\n  }\n}\nreturn null;\n}"],"sourceRoot":""}